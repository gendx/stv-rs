on: [push, pull_request]
name: Build
jobs:
  build:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
        rust:
          - stable
          - beta
          - nightly
          - 1.75.0  # MSRV
        include:
          - os_cache: ""
          - os: macos-latest
            os_cache: "-macos"
      fail-fast: false
    runs-on: ${{ matrix.os }}
    env:
      RUSTFLAGS: "-D warnings"
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}

      - name: Create Cargo.lock file
        run: cargo generate-lockfile
      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: cargo-registry${{ matrix.os_cache }}-${{ hashFiles('Cargo.toml') }}-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            cargo-registry${{ matrix.os_cache }}-${{ hashFiles('Cargo.toml') }}
            cargo-registry${{ matrix.os_cache }}

      - name: Check Cargo version
        run: cargo -V | tee cargo.version.txt
      - name: Cache Cargo target
        uses: actions/cache@v4
        with:
          path: target
          key: cargo-target${{ matrix.os_cache }}-debug-${{ hashFiles('cargo.version.txt') }}-${{ hashFiles('Cargo.toml') }}-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            cargo-target${{ matrix.os_cache }}-debug-${{ hashFiles('cargo.version.txt') }}-${{ hashFiles('Cargo.toml') }}
            cargo-target${{ matrix.os_cache }}-debug-${{ hashFiles('cargo.version.txt') }}

      - name: Build without features
        run: cargo build --verbose --all --no-default-features
      - name: Build examples without features
        if: matrix.rust == 'nightly'
        run: cargo build --verbose --examples --no-default-features

      - name: Build with all features
        run: cargo build --verbose --all --all-features
      - name: Build examples with all features
        if: matrix.rust == 'nightly'
        run: cargo build --verbose --examples --all-features

      - name: Build with default features
        run: cargo build --verbose --all
      - name: Build examples with default features
        if: matrix.rust == 'nightly'
        run: cargo build --verbose --examples
